services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - mynetwork
    restart: always
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - mynetwork
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - mynetwork
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - mynetwork
    depends_on:
      - kafka
    ports:
      - '19000:9000'
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  redis:
    container_name: redis-app
    image: redis:latest
    networks:
      - mynetwork
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: always
  app:
    build: ./
    ports:
      - '3000:3000'
    depends_on:
      - redis
      - db
      - kafka
    env_file:
      - .env
    networks:
      - mynetwork
volumes:
  postgres_data:
  redis_data:

networks:
  mynetwork:
    driver: bridge
